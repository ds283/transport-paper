model "axion_canonical"
 { name        = "Axion hilltop model - Canonical model - new version from Elliston et al. 2012";
   description = "A simple two-field model.";
   citeguide   = "CppTransport user guide arXiv:16xx.yyyyy";
   license     = "CC BY";
   revision    = 1;

   lagrangian  = canonical;

   references  = [ "arXiv:16xx.yyyyy" ];
   urls        = [ "http://transportmethod.com" ];
 };

metadata
 {
   require_version = 201701;
 };

author "David Seery"
 { email     = "D.Seery@sussex.ac.uk";
   institute = "University of Sussex";
 };

author "David Mulryne"
 { email     = "D.Mulryne@qmul.ac.uk";
   institute = "Queen Mary, University of London";
 };

author "Mafalda Dias"
 { email     = "M.Dias@desy.de";
   institute = "DESY, Hamburg";
 };

author "Jonathan Frazer"
 { email     = "J.Frazer@desy.de";
   institute = "DESY, Hamburg";
 };

% specify which class template should be used with this model
templates
 { core           = "canonical_core";
   implementation = "canonical_mpi";
 };

% fix properties of the steppers
background
 { abserr   = 1E-12;
   relerr   = 1E-12;
   stepsize = 1E-10;
   stepper  = "runge_kutta_dopri5";
 };

perturbations
 { abserr   = 1E-12;
   relerr   = 1E-12;
   stepsize = 1E-15;
   stepper  = "runge_kutta_dopri5";
 };

% set up the fields
field phi
 { latex = "\phi";
 };

field chi
 { latex = "\chi";
 };

% set up the parameters of the model
parameter g
 { latex = "g";
 };

parameter Lambda
 { latex = "\Lambda";
 };

parameter f
 { latex = "f";
 };

parameter pi
 { latex = "\pi";
 };

% set up the potential
% note that 'M_P' is a predefined symbol which resolves to the (user-specified) Planck mass at runtime

potential = (1/4)*g*phi^4 + Lambda^4*(1-cos(2*pi*chi/f));
